// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: model.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Employee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName string        `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string        `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Patients  *Patient_Many `protobuf:"bytes,4,opt,name=patients,proto3" json:"patients,omitempty"`
}

func (x *Employee) Reset() {
	*x = Employee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Employee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Employee) ProtoMessage() {}

func (x *Employee) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Employee.ProtoReflect.Descriptor instead.
func (*Employee) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0}
}

func (x *Employee) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Employee) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Employee) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Employee) GetPatients() *Patient_Many {
	if x != nil {
		return x.Patients
	}
	return nil
}

type Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Salutation string        `protobuf:"bytes,2,opt,name=salutation,proto3" json:"salutation,omitempty"`
	LastName   string        `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Employee   *Employee_Ref `protobuf:"bytes,4,opt,name=employee,proto3" json:"employee,omitempty"`
	Findings   *Finding_Many `protobuf:"bytes,5,opt,name=findings,proto3" json:"findings,omitempty"`
}

func (x *Patient) Reset() {
	*x = Patient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient) ProtoMessage() {}

func (x *Patient) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient.ProtoReflect.Descriptor instead.
func (*Patient) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1}
}

func (x *Patient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Patient) GetSalutation() string {
	if x != nil {
		return x.Salutation
	}
	return ""
}

func (x *Patient) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Patient) GetEmployee() *Employee_Ref {
	if x != nil {
		return x.Employee
	}
	return nil
}

func (x *Patient) GetFindings() *Finding_Many {
	if x != nil {
		return x.Findings
	}
	return nil
}

type Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description       string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Patient           *Patient_Ref           `protobuf:"bytes,4,opt,name=patient,proto3" json:"patient,omitempty"`
	SymmptomAreas     []*SymmptomArea        `protobuf:"bytes,5,rep,name=symmptomAreas,proto3" json:"symmptomAreas,omitempty"`
	PainRadar         *PainRadar             `protobuf:"bytes,6,opt,name=painRadar,proto3" json:"painRadar,omitempty"`
	TrainingSessions  *TrainingSession_Many  `protobuf:"bytes,7,opt,name=trainingSessions,proto3" json:"trainingSessions,omitempty"`
	TreatmentSessions *TreatmentSession_Many `protobuf:"bytes,8,opt,name=treatmentSessions,proto3" json:"treatmentSessions,omitempty"`
}

func (x *Finding) Reset() {
	*x = Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding) ProtoMessage() {}

func (x *Finding) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding.ProtoReflect.Descriptor instead.
func (*Finding) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{2}
}

func (x *Finding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Finding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Finding) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Finding) GetPatient() *Patient_Ref {
	if x != nil {
		return x.Patient
	}
	return nil
}

func (x *Finding) GetSymmptomAreas() []*SymmptomArea {
	if x != nil {
		return x.SymmptomAreas
	}
	return nil
}

func (x *Finding) GetPainRadar() *PainRadar {
	if x != nil {
		return x.PainRadar
	}
	return nil
}

func (x *Finding) GetTrainingSessions() *TrainingSession_Many {
	if x != nil {
		return x.TrainingSessions
	}
	return nil
}

func (x *Finding) GetTreatmentSessions() *TreatmentSession_Many {
	if x != nil {
		return x.TreatmentSessions
	}
	return nil
}

type SymmptomArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string  `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	X           float32 `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y           float32 `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
	Fas         int32   `protobuf:"varint,4,opt,name=fas,proto3" json:"fas,omitempty"`
}

func (x *SymmptomArea) Reset() {
	*x = SymmptomArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymmptomArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymmptomArea) ProtoMessage() {}

func (x *SymmptomArea) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymmptomArea.ProtoReflect.Descriptor instead.
func (*SymmptomArea) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3}
}

func (x *SymmptomArea) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SymmptomArea) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SymmptomArea) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *SymmptomArea) GetFas() int32 {
	if x != nil {
		return x.Fas
	}
	return 0
}

type PainRadar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimensions []*PainRadarDimension `protobuf:"bytes,1,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
}

func (x *PainRadar) Reset() {
	*x = PainRadar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PainRadar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PainRadar) ProtoMessage() {}

func (x *PainRadar) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PainRadar.ProtoReflect.Descriptor instead.
func (*PainRadar) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{4}
}

func (x *PainRadar) GetDimensions() []*PainRadarDimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

type PainRadarDimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Degree float32 `protobuf:"fixed32,2,opt,name=degree,proto3" json:"degree,omitempty"`
}

func (x *PainRadarDimension) Reset() {
	*x = PainRadarDimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PainRadarDimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PainRadarDimension) ProtoMessage() {}

func (x *PainRadarDimension) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PainRadarDimension.ProtoReflect.Descriptor instead.
func (*PainRadarDimension) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{5}
}

func (x *PainRadarDimension) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PainRadarDimension) GetDegree() float32 {
	if x != nil {
		return x.Degree
	}
	return 0
}

type TrainingSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Exercises []*Exercise  `protobuf:"bytes,3,rep,name=exercises,proto3" json:"exercises,omitempty"`
	Finding   *Finding_Ref `protobuf:"bytes,4,opt,name=finding,proto3" json:"finding,omitempty"`
}

func (x *TrainingSession) Reset() {
	*x = TrainingSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSession) ProtoMessage() {}

func (x *TrainingSession) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSession.ProtoReflect.Descriptor instead.
func (*TrainingSession) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{6}
}

func (x *TrainingSession) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrainingSession) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrainingSession) GetExercises() []*Exercise {
	if x != nil {
		return x.Exercises
	}
	return nil
}

func (x *TrainingSession) GetFinding() *Finding_Ref {
	if x != nil {
		return x.Finding
	}
	return nil
}

type Exercise struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Reps string `protobuf:"bytes,2,opt,name=reps,proto3" json:"reps,omitempty"`
}

func (x *Exercise) Reset() {
	*x = Exercise{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exercise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exercise) ProtoMessage() {}

func (x *Exercise) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exercise.ProtoReflect.Descriptor instead.
func (*Exercise) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{7}
}

func (x *Exercise) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Exercise) GetReps() string {
	if x != nil {
		return x.Reps
	}
	return ""
}

type TreatmentSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Finding     *Finding_Ref `protobuf:"bytes,4,opt,name=finding,proto3" json:"finding,omitempty"`
	Patient     *Patient_Ref `protobuf:"bytes,5,opt,name=patient,proto3" json:"patient,omitempty"`
}

func (x *TreatmentSession) Reset() {
	*x = TreatmentSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreatmentSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatmentSession) ProtoMessage() {}

func (x *TreatmentSession) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatmentSession.ProtoReflect.Descriptor instead.
func (*TreatmentSession) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{8}
}

func (x *TreatmentSession) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TreatmentSession) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TreatmentSession) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TreatmentSession) GetFinding() *Finding_Ref {
	if x != nil {
		return x.Finding
	}
	return nil
}

func (x *TreatmentSession) GetPatient() *Patient_Ref {
	if x != nil {
		return x.Patient
	}
	return nil
}

// // // // // // //
type Employee_Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Loaded *Employee `protobuf:"bytes,2,opt,name=loaded,proto3" json:"loaded,omitempty"`
}

func (x *Employee_Ref) Reset() {
	*x = Employee_Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Employee_Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Employee_Ref) ProtoMessage() {}

func (x *Employee_Ref) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Employee_Ref.ProtoReflect.Descriptor instead.
func (*Employee_Ref) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Employee_Ref) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Employee_Ref) GetLoaded() *Employee {
	if x != nil {
		return x.Loaded
	}
	return nil
}

// // // // // // //
type Patient_Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Loaded *Employee `protobuf:"bytes,2,opt,name=loaded,proto3" json:"loaded,omitempty"`
}

func (x *Patient_Ref) Reset() {
	*x = Patient_Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Patient_Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient_Ref) ProtoMessage() {}

func (x *Patient_Ref) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient_Ref.ProtoReflect.Descriptor instead.
func (*Patient_Ref) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Patient_Ref) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Patient_Ref) GetLoaded() *Employee {
	if x != nil {
		return x.Loaded
	}
	return nil
}

type Patient_Many struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Present bool       `protobuf:"varint,1,opt,name=present,proto3" json:"present,omitempty"`
	All     []*Patient `protobuf:"bytes,2,rep,name=all,proto3" json:"all,omitempty"`
}

func (x *Patient_Many) Reset() {
	*x = Patient_Many{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Patient_Many) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient_Many) ProtoMessage() {}

func (x *Patient_Many) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient_Many.ProtoReflect.Descriptor instead.
func (*Patient_Many) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Patient_Many) GetPresent() bool {
	if x != nil {
		return x.Present
	}
	return false
}

func (x *Patient_Many) GetAll() []*Patient {
	if x != nil {
		return x.All
	}
	return nil
}

// // // // // // //
type Finding_Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Loaded *Employee `protobuf:"bytes,2,opt,name=loaded,proto3" json:"loaded,omitempty"`
}

func (x *Finding_Ref) Reset() {
	*x = Finding_Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Finding_Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding_Ref) ProtoMessage() {}

func (x *Finding_Ref) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding_Ref.ProtoReflect.Descriptor instead.
func (*Finding_Ref) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Finding_Ref) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Finding_Ref) GetLoaded() *Employee {
	if x != nil {
		return x.Loaded
	}
	return nil
}

type Finding_Many struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Present bool       `protobuf:"varint,1,opt,name=present,proto3" json:"present,omitempty"`
	All     []*Finding `protobuf:"bytes,2,rep,name=all,proto3" json:"all,omitempty"`
}

func (x *Finding_Many) Reset() {
	*x = Finding_Many{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Finding_Many) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding_Many) ProtoMessage() {}

func (x *Finding_Many) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding_Many.ProtoReflect.Descriptor instead.
func (*Finding_Many) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Finding_Many) GetPresent() bool {
	if x != nil {
		return x.Present
	}
	return false
}

func (x *Finding_Many) GetAll() []*Finding {
	if x != nil {
		return x.All
	}
	return nil
}

// // // // // // //
type TrainingSession_Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Loaded *TrainingSession `protobuf:"bytes,2,opt,name=loaded,proto3" json:"loaded,omitempty"`
}

func (x *TrainingSession_Ref) Reset() {
	*x = TrainingSession_Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSession_Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSession_Ref) ProtoMessage() {}

func (x *TrainingSession_Ref) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSession_Ref.ProtoReflect.Descriptor instead.
func (*TrainingSession_Ref) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TrainingSession_Ref) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrainingSession_Ref) GetLoaded() *TrainingSession {
	if x != nil {
		return x.Loaded
	}
	return nil
}

type TrainingSession_Many struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Present bool               `protobuf:"varint,1,opt,name=present,proto3" json:"present,omitempty"`
	All     []*TrainingSession `protobuf:"bytes,2,rep,name=all,proto3" json:"all,omitempty"`
}

func (x *TrainingSession_Many) Reset() {
	*x = TrainingSession_Many{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSession_Many) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSession_Many) ProtoMessage() {}

func (x *TrainingSession_Many) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSession_Many.ProtoReflect.Descriptor instead.
func (*TrainingSession_Many) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{6, 1}
}

func (x *TrainingSession_Many) GetPresent() bool {
	if x != nil {
		return x.Present
	}
	return false
}

func (x *TrainingSession_Many) GetAll() []*TrainingSession {
	if x != nil {
		return x.All
	}
	return nil
}

// // // // // // //
type TreatmentSession_Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Loaded *TreatmentSession `protobuf:"bytes,2,opt,name=loaded,proto3" json:"loaded,omitempty"`
}

func (x *TreatmentSession_Ref) Reset() {
	*x = TreatmentSession_Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreatmentSession_Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatmentSession_Ref) ProtoMessage() {}

func (x *TreatmentSession_Ref) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatmentSession_Ref.ProtoReflect.Descriptor instead.
func (*TreatmentSession_Ref) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{8, 0}
}

func (x *TreatmentSession_Ref) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TreatmentSession_Ref) GetLoaded() *TreatmentSession {
	if x != nil {
		return x.Loaded
	}
	return nil
}

type TreatmentSession_Many struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Present bool                `protobuf:"varint,1,opt,name=present,proto3" json:"present,omitempty"`
	All     []*TreatmentSession `protobuf:"bytes,2,rep,name=all,proto3" json:"all,omitempty"`
}

func (x *TreatmentSession_Many) Reset() {
	*x = TreatmentSession_Many{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreatmentSession_Many) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatmentSession_Many) ProtoMessage() {}

func (x *TreatmentSession_Many) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatmentSession_Many.ProtoReflect.Descriptor instead.
func (*TreatmentSession_Many) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{8, 1}
}

func (x *TreatmentSession_Many) GetPresent() bool {
	if x != nil {
		return x.Present
	}
	return false
}

func (x *TreatmentSession_Many) GetAll() []*TreatmentSession {
	if x != nil {
		return x.All
	}
	return nil
}

var File_model_proto protoreflect.FileDescriptor

var file_model_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x22, 0xd1, 0x01, 0x0a, 0x08, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x08,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x44, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2d, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x22, 0xd3,
	0x02, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61,
	0x6c, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x61, 0x6c, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2e,
	0x52, 0x65, 0x66, 0x52, 0x08, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x1a, 0x44, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x1a, 0x48, 0x0a, 0x04, 0x4d, 0x61,
	0x6e, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x03,
	0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x03, 0x61, 0x6c, 0x6c, 0x22, 0xab, 0x04, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65,
	0x66, 0x52, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x79,
	0x6d, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e,
	0x53, 0x79, 0x6d, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x52, 0x0d, 0x73, 0x79,
	0x6d, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x41, 0x72, 0x65, 0x61, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x70,
	0x61, 0x69, 0x6e, 0x52, 0x61, 0x64, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x50, 0x61, 0x69,
	0x6e, 0x52, 0x61, 0x64, 0x61, 0x72, 0x52, 0x09, 0x70, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x64, 0x61,
	0x72, 0x12, 0x4d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x50, 0x0a, 0x11, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x6e, 0x79, 0x52,
	0x11, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x44, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x1a, 0x48, 0x0a, 0x04, 0x4d, 0x61, 0x6e, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x03, 0x61, 0x6c,
	0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x03, 0x61,
	0x6c, 0x6c, 0x22, 0x5e, 0x0a, 0x0c, 0x53, 0x79, 0x6d, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x41, 0x72,
	0x65, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66,
	0x61, 0x73, 0x22, 0x4c, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x64, 0x61, 0x72, 0x12,
	0x3f, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2e, 0x50, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x64, 0x61, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x40, 0x0a, 0x12, 0x50, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x64, 0x61, 0x72, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x22, 0xbd, 0x02, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x65, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x52, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x07, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x1a, 0x4b, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x1a, 0x50, 0x0a, 0x04, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x61,
	0x6c, 0x6c, 0x22, 0x32, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x65, 0x70, 0x73, 0x22, 0xe1, 0x02, 0x0a, 0x10, 0x54, 0x72, 0x65, 0x61, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x32, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x07, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x66,
	0x52, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x4c, 0x0a, 0x03, 0x52, 0x65, 0x66,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x35, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54,
	0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x1a, 0x51, 0x0a, 0x04, 0x4d, 0x61, 0x6e, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x03, 0x61, 0x6c, 0x6c,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x42, 0x26, 0x5a, 0x24, 0x64, 0x65,
	0x6e, 0x69, 0x66, 0x66, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_proto_rawDescOnce sync.Once
	file_model_proto_rawDescData = file_model_proto_rawDesc
)

func file_model_proto_rawDescGZIP() []byte {
	file_model_proto_rawDescOnce.Do(func() {
		file_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_proto_rawDescData)
	})
	return file_model_proto_rawDescData
}

var file_model_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_model_proto_goTypes = []interface{}{
	(*Employee)(nil),              // 0: objectgraph.Employee
	(*Patient)(nil),               // 1: objectgraph.Patient
	(*Finding)(nil),               // 2: objectgraph.Finding
	(*SymmptomArea)(nil),          // 3: objectgraph.SymmptomArea
	(*PainRadar)(nil),             // 4: objectgraph.PainRadar
	(*PainRadarDimension)(nil),    // 5: objectgraph.PainRadarDimension
	(*TrainingSession)(nil),       // 6: objectgraph.TrainingSession
	(*Exercise)(nil),              // 7: objectgraph.Exercise
	(*TreatmentSession)(nil),      // 8: objectgraph.TreatmentSession
	(*Employee_Ref)(nil),          // 9: objectgraph.Employee.Ref
	(*Patient_Ref)(nil),           // 10: objectgraph.Patient.Ref
	(*Patient_Many)(nil),          // 11: objectgraph.Patient.Many
	(*Finding_Ref)(nil),           // 12: objectgraph.Finding.Ref
	(*Finding_Many)(nil),          // 13: objectgraph.Finding.Many
	(*TrainingSession_Ref)(nil),   // 14: objectgraph.TrainingSession.Ref
	(*TrainingSession_Many)(nil),  // 15: objectgraph.TrainingSession.Many
	(*TreatmentSession_Ref)(nil),  // 16: objectgraph.TreatmentSession.Ref
	(*TreatmentSession_Many)(nil), // 17: objectgraph.TreatmentSession.Many
}
var file_model_proto_depIdxs = []int32{
	11, // 0: objectgraph.Employee.patients:type_name -> objectgraph.Patient.Many
	9,  // 1: objectgraph.Patient.employee:type_name -> objectgraph.Employee.Ref
	13, // 2: objectgraph.Patient.findings:type_name -> objectgraph.Finding.Many
	10, // 3: objectgraph.Finding.patient:type_name -> objectgraph.Patient.Ref
	3,  // 4: objectgraph.Finding.symmptomAreas:type_name -> objectgraph.SymmptomArea
	4,  // 5: objectgraph.Finding.painRadar:type_name -> objectgraph.PainRadar
	15, // 6: objectgraph.Finding.trainingSessions:type_name -> objectgraph.TrainingSession.Many
	17, // 7: objectgraph.Finding.treatmentSessions:type_name -> objectgraph.TreatmentSession.Many
	5,  // 8: objectgraph.PainRadar.dimensions:type_name -> objectgraph.PainRadarDimension
	7,  // 9: objectgraph.TrainingSession.exercises:type_name -> objectgraph.Exercise
	12, // 10: objectgraph.TrainingSession.finding:type_name -> objectgraph.Finding.Ref
	12, // 11: objectgraph.TreatmentSession.finding:type_name -> objectgraph.Finding.Ref
	10, // 12: objectgraph.TreatmentSession.patient:type_name -> objectgraph.Patient.Ref
	0,  // 13: objectgraph.Employee.Ref.loaded:type_name -> objectgraph.Employee
	0,  // 14: objectgraph.Patient.Ref.loaded:type_name -> objectgraph.Employee
	1,  // 15: objectgraph.Patient.Many.all:type_name -> objectgraph.Patient
	0,  // 16: objectgraph.Finding.Ref.loaded:type_name -> objectgraph.Employee
	2,  // 17: objectgraph.Finding.Many.all:type_name -> objectgraph.Finding
	6,  // 18: objectgraph.TrainingSession.Ref.loaded:type_name -> objectgraph.TrainingSession
	6,  // 19: objectgraph.TrainingSession.Many.all:type_name -> objectgraph.TrainingSession
	8,  // 20: objectgraph.TreatmentSession.Ref.loaded:type_name -> objectgraph.TreatmentSession
	8,  // 21: objectgraph.TreatmentSession.Many.all:type_name -> objectgraph.TreatmentSession
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_model_proto_init() }
func file_model_proto_init() {
	if File_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Employee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Patient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymmptomArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PainRadar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PainRadarDimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exercise); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreatmentSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Employee_Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Patient_Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Patient_Many); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Finding_Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Finding_Many); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSession_Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSession_Many); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreatmentSession_Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreatmentSession_Many); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_proto_goTypes,
		DependencyIndexes: file_model_proto_depIdxs,
		MessageInfos:      file_model_proto_msgTypes,
	}.Build()
	File_model_proto = out.File
	file_model_proto_rawDesc = nil
	file_model_proto_goTypes = nil
	file_model_proto_depIdxs = nil
}
