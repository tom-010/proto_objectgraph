syntax = 'proto3';

package objectgraph;

option go_package = "deniffel.com/examples/objectgraph/pb";

// TODOs:
// * Ref: say, which one is the case?
// * Ref: one of?


message Employee {
    string id = 1;
    string firstName = 2;
    string lastName = 3;
    MyPatients myPatients = 4;
    PatientsCreatedByMe createdByMe = 5;

    message MyPatients {
        Patient.AssignedEmployee backRef = 1;
        bool loaded = 2;
        repeated Patient all = 3;
    }

    message PatientsCreatedByMe {
        Patient.CreatedByEmployee backRef = 1;
        repeated Patient all = 3;
    }

    message Ref {
        string id = 1;
        Employee loaded = 2;
    }

}

message Patient {
    string id = 1;
    string salutation = 2;
    string lastName = 3;
    AssignedEmployee employee = 4;
    Findings findings = 5;

    message Findings {
        bool loaded = 1;
        repeated Finding all = 2;
    }

    message AssignedEmployee {
        string id = 1;
        Employee loaded = 2;
    }

    message CreatedByEmployee {
        string id = 1;
        Employee loaded = 2;
    }

}


message Finding {
    string id = 1;
    string name = 2;
    string description = 3;
    PatientRef patient = 4;
    repeated SymmptomArea symmptomAreas = 5;
    PainRadar painRadar = 6;
    TrainingSessions trainingSessions = 7;
    TreatmentSessions treatmentSessions = 8;

    message PatientRef {
        string id = 1;
        Patient loaded = 2;
    }

    message TrainingSessions {
        bool loaded = 1;
        repeated TrainingSession all = 2;
        // TODO: backref required! --> in others too
    }

    message TreatmentSessions {
        bool loaded = 1;
        repeated TreatmentSession all = 2;
        // TODO: backref required!
    }
}

message SymmptomArea {
    string description = 1;
    float x = 2;
    float y = 3;
    int32 fas = 4;
}

message PainRadar {
    repeated PainRadarDimension dimensions = 1;
}

message PainRadarDimension {
    string name = 1;
    float degree = 2;
}

message TrainingSession {
    string id = 1;
    string name = 2;
    repeated Exercise exercises = 3;
    FindingRef finding = 4;

    message FindingRef {
        string id = 1;
        repeated Finding loaded = 2;
    }

    // // // // // // // 
    message Ref {
        string id = 1;
        TrainingSession loaded = 2;
    }
    message Many {
        bool present = 1;
        repeated TrainingSession all = 2;
    }
}

message Exercise {
    string name = 1;
    string reps = 2;
}

message TreatmentSession {
    string id = 1;
    string name = 2;
    string description = 3;
    Findings findings = 4;
    PatientRef patient = 5;

    message Findings {
        bool loaded = 1;
        repeated Finding all = 2;
        // TODO: backref!
    }

    message PatientRef {
        string id = 1;
        Patient loaded = 2;
    }
}

